import inspect
import os

from libloader import LibInterface, pycparsify_headers

# TODO: Make this platform independent
_libpath = '../../lib/libsnackpack.dylib'

def load_dll(libpath):
    # Find the current directory and assume relative locations for binary and
    # headers.
    this_file = inspect.getfile(inspect.currentframe())
    this_dir = os.path.dirname(os.path.abspath(this_file))

    #header_dir = os.path.join(this_dir, 'include')
    header_dir = '../../include'

    # These are a list of headers that have been pushed through the preprocessor
    # with _PYCPARSER_SCAN_ defined. They should be autogenerated by CMake.
    headers = [
        '../../include/snackpack/' + 'blas1_real.h'
    ]

    parsed_header = pycparsify_headers(headers, [header_dir])

    return LibInterface(libpath, parsed_header, 'sp_blas_', strip_prefix=True)


blas = load_dll(_libpath)
